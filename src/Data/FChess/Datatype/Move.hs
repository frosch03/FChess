{-|
Module      : Move
Description : Contains the move definition
License     : GPL-3
Maintainer  : frosch03@frosch03.de
Stability   : experimental
-}

module Data.FChess.Datatype.Move
    ( Move(..)
    , Direction
    , Limit
    )
where

-- | 'Direction' is the angle in which the the move will be
-- conducted. These angles are possible:
--
-- .|---+---+---+---+---+---+---|
-- .|   |   |   |090|   |   |   |
-- .|---+---+---+---+---+---+---|
-- .|   |135|117|   |063|045|   |
-- .|---+---+---+---+---+---+---|
-- .|   |153|   |   |   |027|   |
-- .|---+---+---+---+---+---+---|
-- .|180|   |   |x x|   |   |000|
-- .|---+---+---+---+---+---+---|
-- .|   |207|   |   |   |333|   |
-- .|---+---+---+---+---+---+---|
-- .|   |225|243|   |297|315|   |
-- .|---+---+---+---+---+---+---|
-- .|   |   |   |270|   |   |   |
-- .|---+---+---+---+---+---+---|
--
-- Normal:
-- .|-----+-----+---+-----+---+-----+-----|
-- .|     |     |   | 090 |   |     |     |
-- .|-----+-----+---+-----+---+-----+-----|
-- .|     | 135 |   |     |   | 045 |     |
-- .|-----+-----+---+-----+---+-----+-----|
-- .|     |     |   |     |   |     |     |
-- .|-----+-----+---+-----+---+-----+-----|
-- .| 180 |     |   | x x |   |     | 000 |
-- .|-----+-----+---+-----+---+-----+-----|
-- .|     |     |   |     |   |     |     |
-- .|-----+-----+---+-----+---+-----+-----|
-- .|     | 225 |   |     |   | 315 |     |
-- .|-----+-----+---+-----+---+-----+-----|
-- .|     |     |   | 270 |   |     |     |
-- .|-----+-----+---+-----+---+-----+-----|
--
-- Knight:
-- .|-----+-----+-----+-----+-----|
-- .|     | 117 |     | 063 |     |
-- .|-----+-----+-----+-----+-----|
-- .| 153 |     |     |     | 027 |
-- .|-----+-----+-----+-----+-----|
-- .|     |     | x x |     |     |
-- .|-----+-----+-----+-----+-----|
-- .| 207 |     |     |     | 333 |
-- .|-----+-----+-----+-----+-----|
-- .|     | 243 |     | 297 |     |
-- .|-----+-----+-----+-----+-----|
type Direction = Int

-- | The 'Limit' describes the maximal movement range for a
-- figure. This is usually 1 for a pawn and two for a knight.
type Limit = Int

data Move
    = Move Direction (Maybe Limit)
    deriving (Eq, Show)
